/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.82
 * Generated at: 2023-11-16 09:14:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import sa_event.Qna;
import sa_event.QnaDAO;
import java.util.*;
import sa_event.QnaComment;
import sa_event.QnaCommentDAO;

public final class Qna_005fDetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("sa_event.QnaComment");
    _jspx_imports_classes.add("sa_event.QnaCommentDAO");
    _jspx_imports_classes.add("sa_event.QnaDAO");
    _jspx_imports_classes.add("sa_event.Qna");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>문의 상세 페이지</title>\n");
      out.write("<link rel=\"stylesheet\" href=\"./saCss/saCss.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<img src=\"./image/로고1.png\" id=\"logo\">\n");
      out.write(" <!--로그인 버튼-->\n");
      out.write("    <div style=\"text-align: right; width: 1215px;\">\n");
      out.write("    ");

    	if(session.getAttribute("email")!=null){
    
      out.write("\n");
      out.write("	 	<button type=\"button\" onclick=\"location.href='logout.jsp'\" style=\"width:75px;\">로그아웃</button>\n");
      out.write("	 	 <h>|</h>\n");
      out.write("	    <button type=\"button\" onclick=\"location.href='mypageServlet?email=");
      out.print(session.getAttribute("email"));
      out.write("'\" style=\"width:100px;\">마이페이지</button>\n");
      out.write("	 ");

    	}else{
	 
      out.write("\n");
      out.write("		 <button type=\"button\" onclick=\"location.href='login.jsp'\" style=\"width:60px;\">로그인</button>\n");
      out.write("		 <h>|</h>\n");
      out.write("	    <button type=\"button\" onclick=\"location.href='join.jsp'\" style=\"width:100px;\">회원가입</button>\n");
      out.write("	  ");

    	}
	  
      out.write("\n");
      out.write("	    \n");
      out.write("	</div>\n");
      out.write("<div id=\"buttons\">\n");
      out.write("		<ul>\n");
      out.write("			<li onclick=\"location.href='Event_List.jsp'\">행사정보</li>\n");
      out.write("			<li onclick=\"location.href='reservation_search.jsp'\">예약조회</li>\n");
      out.write("			<li onclick=\"location.href='Qna_List.jsp'\">QNA</li>\n");
      out.write("			<li onclick=\"location.href='review_list.jsp'\">후기</li>\n");
      out.write("		</ul>\n");
      out.write("	</div>\n");
      out.write("	\n");
      out.write("	<h3 style=\"text-align:center;\">문의 상세 정보</h3>\n");
      out.write("	\n");


//QnaDAO qnaDAO = new QnaDAO();

//String qna_numberValue = request.getParameter("qna_number");

//int qna_number = Integer.parseInt(qna_numberValue);
//Qna qna = qnaDAO.getQnaInfoALl(qna_number);
	
	//ArrayList<Qna> qnaList = qnaDAO.getAllQna(Integer.parseInt(qna_numberValue));
	//QnaDAO qnaDAO = new QnaDAO();
    //String qna_numberValue = request.getParameter("qna_number");
    //int qna_number = Integer.parseInt(qna_numberValue);
    //Qna qna = qnaDAO.getQnaInfoALl(qna_number);


      out.write("\n");
      out.write("<div id=\"background\">\n");
      out.write("<div id=\"list\">\n");
      out.write("<table >\n");
      out.write("<tr >\n");
      out.write("	<th>문의번호</th>\n");
      out.write("\n");
      out.write("	<th>제목</th>\n");
      out.write("	<th>내용</th>\n");
      out.write("	<th>이름</th>\n");
      out.write("	<th>작성일</th>\n");
      out.write("\n");
      out.write("	<th>이메일</th>\n");
      out.write("</tr>\n");
      out.write("\n");
      out.write("<tr style=\"height:30px;\">\n");
      out.write("	<td style=\"background-color:white;\">");
      out.print(session.getAttribute("qna_number") );
      out.write("</td>\n");
      out.write("\n");
      out.write("	<td style=\"background-color:white;\">");
      out.print(session.getAttribute("qna_title") );
      out.write("</td>\n");
      out.write("	<td style=\"background-color:white;\">");
      out.print(session.getAttribute("qna_content"));
      out.write("</td>\n");
      out.write("	<td style=\"background-color:white;\">");
      out.print(session.getAttribute("qna_name") );
      out.write("</td>\n");
      out.write("	<td style=\"background-color:white;\">");
      out.print(session.getAttribute("qna_date") );
      out.write("</td>\n");
      out.write("	<td style=\"background-color:white;\">");
      out.print(session.getAttribute("qna_email") );
      out.write("</td>\n");
      out.write("\n");
      out.write("\n");
      out.write("</tr>\n");
      out.write("</table>\n");
      out.write("<br><br>\n");
      out.write("\n");
      out.write(" <div class=\"test\">\n");
      out.write("<input type=\"submit\" value=\"돌아가기\" style=\"width: 85px; height: 34px; border-radius: 5px;\"\n");
      out.write("onclick=\"location.href='Qna_List.jsp'\">\n");
      out.write("<input type=\"submit\" style=\"width: 85px; height: 34px; border-radius: 5px;\"\n");
      out.write("value=\"삭제하기\" onclick=\"location.href='Qna_Delete.jsp?qna_number=");
      out.print(session.getAttribute("qna_number") );
      out.write("'\">\n");
      out.write("<input type=\"submit\" value=\"수정하기\" style=\"width: 85px; height: 34px; border-radius: 5px;\"\n");
      out.write("onclick=\"location.href='Qna_Update.jsp?qna_number=");
      out.print(session.getAttribute("qna_number") );
      out.write("'\">\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("<br><br><br>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<br><br><br><br>\n");
      out.write("    <!--  댓글 목록 표시 -->\n");
      out.write("    <div class=\"commentBox\"  > \n");
      out.write("    <div class=\"commentScrollBox\" style=\"overflow-y:scroll;\">\n");
      out.write("       		 <table id=\"commnetlist\" style=\"overflow-y:scroll;\">\n");
      out.write("                ");

               	
                QnaCommentDAO qnacommentDAO = new QnaCommentDAO();
                int qna_number = Integer.parseInt((request.getParameter("qna_number")));
                ArrayList<QnaComment> commentList = qnacommentDAO.getQnaCommentByqna_number(qna_number);
                
                for(QnaComment qc : commentList) {
                
      out.write("\n");
      out.write("              	<tr >\n");
      out.write("                    \n");
      out.write("                	<td style=\"width:500px;\">");
      out.print(qc.getQna_comment_content() );
      out.write("</td>\n");
      out.write("               		<td>");
      out.print(qc.getQna_comment_date() );
      out.write(" \n");
      out.write("               		<button style=\"background-color:lightgray; border-radius:5px; width:90px;border:1px solid gray;\" id=\"commentdeleteButton\" type=\"submit\" onclick=\"location.href='QnaComment_Delete.jsp?qna_comment_number=");
      out.print(qc.getQna_comment_number() );
      out.write("'\">댓글삭제</button> </td>\n");
      out.write("\n");
      out.write("                <tr>\n");
      out.write("                ");

               	}
                
      out.write("\n");
      out.write("				</tr>\n");
      out.write("				\n");
      out.write("            </table>\n");
      out.write("            </div>\n");
      out.write("     </div>\n");
      out.write("<br><br><br>       \n");
      out.write("<div id=\"commentFormbox\">\n");
      out.write("<form action=\"Qna_comment_servlet\" method=\"post\">\n");
      out.write("   	<input type=hidden name=\"qna_number\" value=\"");
      out.print(session.getAttribute("qna_number") );
      out.write("\">\n");
      out.write("   	 \n");
      out.write("   	   	\n");
      out.write("   	<label for=\"qna_comment_content\"> 댓글 내용 : </label>\n");
      out.write("   	<input style=\"width: 600px; height: 40px; border-radius: 5px;\" type=\"text\" id=\"qna_commemt_content\" name=\"qna_comment_content\" required>\n");
      out.write("   	<br>\n");
      out.write("   	<br>\n");
      out.write("   	<label for=\"qna_comment_password\">비밀번호 : </label>\n");
      out.write("   	<input style =\" width: 200px; height: 30px; border-radius: 5px;\" type=\"password\" id=\"qna_comment_password\" name=\"qna_comment_password\" required>\n");
      out.write("   	\n");
      out.write("   	<input type=\"submit\" value=\"댓글추가\" style=\"width: 85px; height: 34px; border-radius: 5px;\">\n");
      out.write("\n");
      out.write("</form>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write(" \n");
      out.write(" \n");
      out.write("\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
