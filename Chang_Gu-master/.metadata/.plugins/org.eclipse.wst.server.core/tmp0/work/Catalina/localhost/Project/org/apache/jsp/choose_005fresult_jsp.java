/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.82
 * Generated at: 2023-11-17 00:02:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import gaeul.review.festivalDTO;
import gaeul.review.selectDAO;
import gaeul.review.deleteDAO;
import java.util.*;
import gaeul.review.commentDTO;
import gaeul.review.select_comment_DAO;

public final class choose_005fresult_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("gaeul.review.commentDTO");
    _jspx_imports_classes.add("gaeul.review.selectDAO");
    _jspx_imports_classes.add("gaeul.review.festivalDTO");
    _jspx_imports_classes.add("gaeul.review.deleteDAO");
    _jspx_imports_classes.add("gaeul.review.select_comment_DAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("    \n");
      out.write("     \n");
      out.write("     \n");
      out.write("     \n");
      out.write("     \n");
      out.write("     \n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"utf-8\">\n");
      out.write("<title>GO, festival 후기 상세보기</title>\n");
      out.write("<link rel=\"stylesheet\" href=\"review.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\n");
      out.write("		<!-- 로고 이미지 -->\n");
      out.write("	<img src=\"./image/로고1.png\" id=\"logo\" onclick=\"location.href='home.jsp'\">\n");
      out.write("	\n");
      out.write("\n");
      out.write("\n");
      out.write("	 <div style=\"text-align: right; width: 1215px;\">\n");
      out.write("    ");

    if(session.getAttribute("email")!=null){
    
      out.write("\n");
      out.write("	 	<button type=\"button\" onclick=\"location.href='logout.jsp'\" style=\"background:none;border:none;width:75px;\">로그아웃</button>\n");
      out.write("	 	 <h>|</h>\n");
      out.write("	    <button type=\"button\" onclick=\"location.href='mypageServlet?email=");
      out.print(session.getAttribute("email"));
      out.write("'\" style=\"background:none;border:none;width:100px;\">마이페이지</button>\n");
      out.write("	 ");

	 }else{
	 
      out.write("\n");
      out.write("		 <button type=\"button\" onclick=\"location.href='login.jsp'\" style=\"width:60px;background:none;border:none;\">로그인</button>\n");
      out.write("		 <h>|</h>\n");
      out.write("	    <button type=\"button\" onclick=\"location.href='join.jsp'\" style=\"width:100px;background:none;border:none;\">회원가입</button>\n");
      out.write("	    \n");
      out.write("	  ");

	  }
	  
      out.write("\n");
      out.write("	    \n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("	<div id=\"buttons\">\n");
      out.write("	<!--로그인 버튼-->\n");
      out.write("   <ul style=\"list-style:none;\">\n");
      out.write("			<li style=\"float:left;margin-left:170px;\" onclick=\"location.href='Event_List.jsp'\">행사정보</li>\n");
      out.write("			<li style=\"float:left;margin-left:170px;\" onclick=\"location.href='reservation_search.jsp'\">예약조회</li>\n");
      out.write("			<li style=\"float:left;margin-left:170px;\" onclick=\"location.href='Qna_List.jsp'\">QNA</li>\n");
      out.write("			<li style=\"float:left;margin-left:170px;\" onclick=\"location.href='review_list.jsp'\">후기</li>\n");
      out.write("		</ul>\n");
      out.write("	</div>\n");
      out.write("		\n");
      out.write("	 \n");
      out.write("	\n");
      out.write(" 	 	\n");
      out.write(" 	 	");

 	 	 	selectDAO dao = new selectDAO();
 			festivalDTO friview = new festivalDTO();
 			int review_number = Integer.parseInt(request.getParameter("review_number"));
 			ArrayList<festivalDTO> reviewlist=dao.listreview(review_number);
 			
 	 	 	 	
      out.write("\n");
      out.write("	\n");
      out.write("    \n");
      out.write("    ");

    		//검색창에서 리뷰 검색결과
    		int rnum=0;
            for(int i=0; i<reviewlist.size(); i++){
            	festivalDTO riviewarray= (festivalDTO) reviewlist.get(i);
            	rnum = riviewarray.getReviewnumber();
            	String content=riviewarray.getReview();
            	String title=riviewarray.getReview_title();
            	Date date=riviewarray.getReviewdate();
            	String eventname = riviewarray.getEvent_name();
            	
		        
      out.write("\n");
      out.write("		        \n");
      out.write("		        \n");
      out.write("		        <!-- 가운데 가장 큰 박스 -->\n");
      out.write("					<div id=\"background\" style=\"height:550px;\">\n");
      out.write("				\n");
      out.write("					<h3 style=\"text-align:center\">[");
      out.print(eventname );
      out.write("]</h3>\n");
      out.write("			 	 	\n");
      out.write("			 	 	<div id=\"reviewbox\">\n");
      out.write("		        \n");
      out.write("			        <div style=\" font-size:14px;box-shadow:0px 1px 3px gray; width:900px; margin-left:auto; margin-right:auto; height:160px;\">\n");
      out.write("			        <p style=\"float:left;font-size:17px;font-weight:600;margin-left:20px;\"> ");
      out.print( title );
      out.write("</p>\n");
      out.write("			        <p style=\"float:right;margin-right:20px;\">작성일 : ");
      out.print(date);
      out.write("</p>\n");
      out.write("			        <p style=\"float:left; background:rgb(247, 247, 249);width:850px;height:80px;margin-left:24px;padding-top:15px;margin-top:1px; \">");
      out.print(content );
      out.write("</p>\n");
      out.write("			        <br>\n");
      out.write("			        \n");
      out.write("		    	");

		    }
		    
      out.write("\n");
      out.write("		    \n");
      out.write("   \n");
      out.write("    \n");
      out.write("    	\n");
      out.write("				\n");
      out.write("				");

			    if(session.getAttribute("email")!=null){
			    
      out.write("\n");
      out.write("				\n");
      out.write("				<input style=\"margin-top:5px; width:85px;float:right;\" type=\"submit\" value=\"리뷰 삭제\" onclick=\"location.href='review_delete.jsp?rnum=");
      out.print(rnum);
      out.write("'\">		\n");
      out.write("				<input style=\"margin-top:5px; width:85px; float:right; margin-right:10px;\" type=\"submit\" value=\"리뷰 수정\" onclick=\"location.href='review_update.jsp?rnum=");
      out.print(rnum);
      out.write("'\">\n");
      out.write("			\n");
      out.write("			\n");
      out.write("			\n");
      out.write("				<div style=\"height:100px;\">	\n");
      out.write("				<!-- 댓글서블렛으로 데이터 전송 -->\n");
      out.write("				<form action=\"insertCommentDAO\" method=\"post\">\n");
      out.write("				<!-- 댓글입력창 -->\n");
      out.write("		 	 	<input id=\"comment_content\" type=\"text\" name=\"comment_content\" style=\"text-align:center;float:left;border:1px solid gray;border-radius:5px;height:70px;margin-top: 10px;margin-bottom: 10px; width:700px\" required placeholder=\"댓글을 입력해주세요.\">\n");
      out.write("		 	 	<br>\n");
      out.write("		 	 	<br>\n");
      out.write("		 	 	<!-- 비밀번호 입력창 -->\n");
      out.write("		 	 	<input type=\"password\" name=\"comment_password\" style=\"text-align:center; float:right;border:1px solid gray;border-radius:5px;height:20px;width:175px; margin-top:5px;\" required placeholder= \"비밀번호를 입력해주세요.\">\n");
      out.write("		 	 	<input type=\"hidden\" name=\"rnum\" value=\"");
      out.print(rnum);
      out.write("\">\n");
      out.write("		 	 	<!-- 댓글등록 버튼 -->\n");
      out.write("		 	 	<input type=\"submit\" value=\"댓글 등록하기\" style=\"float:right;border-radius:5px;margin-top:4px;height:26px;width:180px;\">\n");
      out.write("		 	 	</form>\n");
      out.write("		 	 	</div>			\n");
      out.write("				");

			    }else{
				
      out.write("\n");
      out.write("				<br>\n");
      out.write("				\n");
      out.write("				<!-- 댓글서블렛으로 데이터 전송 -->\n");
      out.write("				<form action=\"insertCommentDAO\" method=\"post\">\n");
      out.write("				<!-- 댓글입력창 -->\n");
      out.write("		 	 	<input id=\"comment_content\" type=\"text\" name=\"comment_content\" style=\"float:left;border:1px solid gray;border-radius:5px;height:70px;margin-top: 10px;margin-bottom: 10px; width:700px\" required placeholder=\"댓글을 입력해주세요.\">\n");
      out.write("		 	 	<br>\n");
      out.write("		 	 	<br>\n");
      out.write("		 	 	<!-- 비밀번호 입력창 -->\n");
      out.write("		 	 	<input type=\"password\" id=\"comment_password\" name=\"comment_password\" required placeholder= \"비밀번호\">\n");
      out.write("		 	 	<input type=\"hidden\" name=\"rnum\" value=\"");
      out.print(rnum);
      out.write("\">\n");
      out.write("		 	 	<!-- 댓글등록 버튼 -->\n");
      out.write("		 	 	<input type=\"submit\" value=\"댓글 등록하기\" style=\"float:right;border-radius:5px;margin-top:4px;height:26px;width:180px;\">\n");
      out.write("		 	 	</form>\n");
      out.write("\n");
      out.write("				");

			    }
				
      out.write("\n");
      out.write("				<div class=\"commentbox\" >\n");
      out.write("				\n");
      out.write("				<!-- 댓글이 담길 곳 -->\n");
      out.write("			\n");
      out.write("				\n");
      out.write("			<table style=\"text-align:left;padding-left:15px;\">\n");
      out.write(" 				");

				select_comment_DAO selectdao = new select_comment_DAO();
				ArrayList<commentDTO> listcomment = selectdao.commentlist(review_number);
				
				//댓글 검색결과
				for(int i=0; i<listcomment.size(); i++){
					commentDTO riviewarray= (commentDTO) listcomment.get(i);
					int conum=riviewarray.getComment_number();
					String content=riviewarray.getComment_content();
					Date codate =riviewarray.getComment_date();
				
      out.write("\n");
      out.write("					<tr style=\"padding:10px;\">\n");
      out.write("						<td style=\"width:720px;border:none;background-color:rgb(243, 241, 241);font-size:13px;\">");
      out.print(content );
      out.write("</td>\n");
      out.write("						<td style=\"width:80px;border:none;background-color:rgb(243, 241, 241);font-size:12px;\">");
      out.print(codate );
      out.write("</td>\n");
      out.write("						<td style=\"border:none;background-color:rgb(243, 241, 241);\"><input type=\"submit\" value=\"삭제하기\"  onclick=\"location.href='comment_delete.jsp?conum=");
      out.print(conum);
      out.write("'\"></td>	\n");
      out.write("							\n");
      out.write("						\n");
      out.write("					</tr>\n");
      out.write("					\n");
      out.write("				");

				}
				
      out.write("\n");
      out.write("				</table>\n");
      out.write("  			  </div>\n");
      out.write("  			  \n");
      out.write("  			  <br>\n");
      out.write("  		\n");
      out.write(" 	 	</div>\n");
      out.write(" 	\n");
      out.write(" 	 	\n");
      out.write("	</div>\n");
      out.write("	\n");
      out.write("	</div>\n");
      out.write("    \n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
