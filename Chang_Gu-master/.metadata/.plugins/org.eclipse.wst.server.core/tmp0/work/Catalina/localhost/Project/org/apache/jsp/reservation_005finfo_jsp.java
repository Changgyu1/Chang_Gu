/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.82
 * Generated at: 2023-11-17 01:14:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import hj.event.ReservationSearchDAO;
import hj.event.ReservationDTO;

public final class reservation_005finfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("hj.event.ReservationSearchDAO");
    _jspx_imports_classes.add("hj.event.ReservationDTO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"UTF-8\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>GO, FESTIVAL 예약조회</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"./hjCss/main.css\">\n");
      out.write("	<link rel=\"stylesheet\" href=\"./hjCss/reservationSearchInfo2.css\">\n");
      out.write("	<link rel=\"stylesheet\" href=\"./hjCss/reservationReCancel.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div id=\"wrapper\">\n");
      out.write("    <!--로고이미지-->\n");
      out.write("    <img src=\"./image/로고1.png\" id=\"logo\" onclick=\"location.href='home.jsp'\">\n");
      out.write("\n");
      out.write("    <!--로그인 버튼-->\n");
      out.write("	 <div style=\"text-align: right; width: 1215px;\">\n");
      out.write("    ");

    if(session.getAttribute("email")!=null){
    
      out.write("\n");
      out.write("	 	<button type=\"button\" onclick=\"location.href='logout.jsp'\" style=\"background:none;border:none;width:75px;\">로그아웃</button>\n");
      out.write("	 	 <h>|</h>\n");
      out.write("	    <button type=\"button\" onclick=\"location.href='mypageServlet?email=");
      out.print(session.getAttribute("email"));
      out.write("'\" style=\"background:none;border:none;width:100px;\">마이페이지</button>\n");
      out.write("	 ");

	 }else{
	 
      out.write("\n");
      out.write("		 <button type=\"button\" onclick=\"location.href='login.jsp'\" style=\"background:none;border:none;width:60px;\">로그인</button>\n");
      out.write("		 <h>|</h>\n");
      out.write("	    <button type=\"button\" onclick=\"location.href='join.jsp'\" style=\"background:none;border:none;width:100px;\">회원가입</button>\n");
      out.write("	  ");

	  }
	  
      out.write("\n");
      out.write("	\n");
      out.write("<!-- 메뉴바 -->\n");
      out.write("  <div id=\"buttons\">\n");
      out.write("		<ul>\n");
      out.write("			<li id=\"menu\" onclick=\"location.href='review_list.jsp'\">후기</li>\n");
      out.write("			<li id=\"menu\" onclick=\"location.href='Qna_List.jsp'\">QNA</li>\n");
      out.write("			<li id=\"menu\" onclick=\"location.href='reservation_search.jsp'\">예약조회</li>\n");
      out.write("			<li id=\"menu\" onclick=\"location.href='Event_List.jsp'\">행사정보</li>\n");
      out.write("		</ul>\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("	<!-- 가운데 가장 큰 박스 -->\n");
      out.write("	<div id=\"background\">\n");
      out.write("	\n");
      out.write("		<h2 style=\"padding-top:15px\">예약 조회</h2>\n");
      out.write("		<!-- 안에 글넣는 하얀 박스-->\n");
      out.write("		<div id=\"reviewbox\">\n");
      out.write("			<div>\n");
      out.write("            \n");
      out.write("			");

				int r_id = Integer.parseInt(request.getParameter("r_id"));
				String email = request.getParameter("email");
				ReservationSearchDAO rs = new ReservationSearchDAO();
				
				
				ReservationDTO rdto = rs.getRInfo(r_id, email);
				
				if (rdto != null) {
			
      out.write("\n");
      out.write("			<ul id=\"info\">\n");
      out.write("			        <li id=\"info\">예약번호: ");
      out.print(rdto.getId() );
      out.write("</li>\n");
      out.write("			        <li id=\"info\">이메일: ");
      out.print(rdto.getEmail() );
      out.write("</li>\n");
      out.write("			        <li id=\"info\">휴대전화: ");
      out.print(rdto.getPhonenumber() );
      out.write("</li>\n");
      out.write("			        <li id=\"info\">예약 인원: ");
      out.print(rdto.getPerson() );
      out.write("</li>\n");
      out.write("			        <li id=\"info\">행사명: ");
      out.print(rdto.getEvent_name() );
      out.write("</li>\n");
      out.write("			        <li id=\"info\">날짜: ");
      out.print(rdto.getEvent_day() );
      out.write("</li>\n");
      out.write("			        <li id=\"info\">위치: ");
      out.print(rdto.getEvent_location() );
      out.write("</li>\n");
      out.write("			        <li id=\"info\">결제 금액: ");
      out.print(rdto.getTotal() );
      out.write("</li>\n");
      out.write("			</ul>\n");
      out.write("			<div id=\"crebutton\">\n");
      out.write("	        <input id=\"rebutton\" type=\"text\" value=\"예약수정\" onclick=\"location.href='reservation_update.jsp?r_id=");
      out.print(r_id);
      out.write("'\">\n");
      out.write("	        <input id=\"cbutton\" onclick=\"location.href='reservation_cancel_form.jsp?r_id=");
      out.print(r_id);
      out.write("'\" value=\"예약취소\">\n");
      out.write("          </div>\n");
      out.write("\n");
      out.write("        </div>\n");
      out.write("        <!-- 취소 수정 버튼 -->\n");
      out.write("        ");
    } else {
			        out.println("예약 정보를 찾을 수 없습니다.");
			    }
			
      out.write("\n");
      out.write("        \n");
      out.write("        \n");
      out.write("	 </div>\n");
      out.write("	 \n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
