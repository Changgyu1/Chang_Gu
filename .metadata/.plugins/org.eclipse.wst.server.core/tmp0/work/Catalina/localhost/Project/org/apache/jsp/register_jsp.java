/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.82
 * Generated at: 2023-11-14 09:53:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import register.event.registerDAO;
import register.event.registerDTO;
import java.io.PrintWriter;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("register.event.registerDAO");
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("register.event.registerDTO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"UTF-8\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>예약</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"./css/event.css\">\r\n");
      out.write("	<style>\r\n");
      out.write("	.center-register{\r\n");
      out.write("	   width:500px; \r\n");
      out.write("    margin: auto;\r\n");
      out.write("    \r\n");
      out.write("	}\r\n");
      out.write("	table, td, th {\r\n");
      out.write("    border-right:none;\r\n");
      out.write("\r\n");
      out.write("border-left:none;\r\n");
      out.write("\r\n");
      out.write("border-top:none;\r\n");
      out.write("\r\n");
      out.write("border-bottom:none;\r\n");
      out.write("    \r\n");
      out.write("}\r\n");
      out.write(".register-Div{\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("    bottom: -26%;\r\n");
      out.write("    left: 50%;\r\n");
      out.write("    transform: translate(-50%, -50%);\r\n");
      out.write("}\r\n");
      out.write("input[type=\"text\"], input[type=\"email\"], input[type=\"password\"] {\r\n");
      out.write("	    width: 300px;\r\n");
      out.write("    margin: 29px 3px 22px 20px;\r\n");
      out.write("    height: 27px;\r\n");
      out.write("}\r\n");
      out.write("	</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"wrapper\">\r\n");
      out.write("		<!--로고이미지-->\r\n");
      out.write("		<img src=\"./image/로고1.png\" id=\"logo\">\r\n");
      out.write("		<!--로그인 버튼-->\r\n");
      out.write("		<div style=\"text-align: right; width: 1215px;\">\r\n");
      out.write("			");

			if (session.getAttribute("email") != null) {
			
      out.write("\r\n");
      out.write("			<button type=\"button\" onclick=\"location.href='logout.jsp'\"\r\n");
      out.write("				style=\"width: 75px;\">로그아웃</button>\r\n");
      out.write("			<h>|</h>\r\n");
      out.write("			<button type=\"button\"\r\n");
      out.write("				onclick=\"location.href='mypageServlet?email=");
      out.print(session.getAttribute("email"));
      out.write("'\"\r\n");
      out.write("				style=\"width: 100px;\">마이페이지</button>\r\n");
      out.write("			");

			} else {
			
      out.write("\r\n");
      out.write("			<button type=\"button\" onclick=\"location.href='login.jsp'\"\r\n");
      out.write("				style=\"width: 60px;\">로그인</button>\r\n");
      out.write("			<h>|</h>\r\n");
      out.write("			<button type=\"button\" onclick=\"location.href='join.jsp'\"\r\n");
      out.write("				style=\"width: 100px;\">회원가입</button>\r\n");
      out.write("			");

			}
			
      out.write("\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<!-- 메뉴바 -->\r\n");
      out.write("		<div id=\"buttons\">\r\n");
      out.write("			<ul>\r\n");
      out.write("				<li onclick=\"location.href='review_list.jsp'\">후기</li>\r\n");
      out.write("				<li onclick=\"location.href='Qna_List.jsp'\">QNA</li>\r\n");
      out.write("				<li onclick=\"location.href='reservation_search.jsp'\">예약조회</li>\r\n");
      out.write("				<li onclick=\"location.href='Event_List.jsp'\">행사정보</li>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</div>\r\n");
      out.write("		<!-- 가운데 가장 큰 박스 -->\r\n");
      out.write("		<div id=\"background\">\r\n");
      out.write("\r\n");
      out.write("			<h2 style=\"padding-top: 15px\">회원가입</h2>\r\n");
      out.write("			<!-- 안에 글넣는 하얀 박스-->\r\n");
      out.write("			<div id=\"reviewbox\">\r\n");
      out.write("				<!-- 회원가입 -->\r\n");
      out.write("				<div class=\"register-Div\">\r\n");
      out.write("				<form action=\"register\" method=\"post\" onsubmit=\"return Check()\">\r\n");
      out.write("					<table class=\"center-register\">\r\n");
      out.write("						<thead class=\"registerInfo\">\r\n");
      out.write("							<tr>\r\n");
      out.write("								<th>* 이메일</th>\r\n");
      out.write("								<th><input type=\"email\" id=\"email\" name=\"email\" class=\"input-reg\" required></th>\r\n");
      out.write("							</tr>\r\n");
      out.write("						</thead>\r\n");
      out.write("						<tbody>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td>* 이름</td>\r\n");
      out.write("								<td><input type=\"text\" id=\"name\" name=\"name\" class=\"input-reg\" required> </td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td>* 연락처</td>\r\n");
      out.write("								<td><input type=\"text\" id=\"phonenumber\" name=\"phonenumber\" class=\"input-reg\" required></td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td>* 비밀번호</td>\r\n");
      out.write("								<td><input type=\"password\" id=\"password\" name=\"password\" class=\"input-reg\" required></td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td>* 비밀번호 확인</td>\r\n");
      out.write("								<td><input type=\"password\" id=\"passwordcheck\" name=\"passwordcheck\" class=\"input-reg\" required></td>\r\n");
      out.write("							</tr>\r\n");
      out.write("						</tbody>\r\n");
      out.write("					</table>\r\n");
      out.write("					<input type=\"submit\" onclick=\"Check()\" value=\"회원가입\"\r\n");
      out.write("						style=\"width: 80px; height: 30px;\">\r\n");
      out.write("				</form>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
